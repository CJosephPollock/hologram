{"version":3,"sources":["app.js"],"names":["gotStream","stream","window","URL","video","src","createObjectURL","onerror","e","stop","onended","noStream","onloadedmetadata","document","getElementById","hidden","setTimeout","canvas","width","videoWidth","height","videoHeight","msg","code","textContent","init","navigator","getUserMedia","body","classList","add","innerHTML","loadGraph","graph","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","webkitURL","app","capture","starter","ctx","getContext","intervalId","addEventListener","event"],"mappings":"AAYA,QAASA,WAAUC,GACbC,OAAOC,IACTC,MAAMC,IAAMH,OAAOC,IAAIG,gBAAgBL,GAEvCG,MAAMC,IAAMJ,EAGdG,MAAMG,QAAU,SAASC,GACvBP,EAAOQ,QAGTR,EAAOS,QAAUC,SAEjBP,MAAMQ,iBAAmB,SAASJ,GAChCK,SAASC,eAAe,UAAUC,QAAS,EAC3CF,SAASC,eAAe,OAAOC,QAAS,GAK1CC,WAAW,WACTH,SAASC,eAAe,UAAUC,QAAS,EAC3CF,SAASC,eAAe,OAAOC,QAAS,GACvC,IAEDX,MAAMQ,iBAAmB,WACrBK,OAAOC,MAAQd,MAAMe,WACrBF,OAAOG,OAAShB,MAAMiB,aAI9B,QAASV,UAASH,GAChB,GAAIc,GAAM,sBACI,IAAVd,EAAEe,OACJD,EAAM,qCAERT,SAASC,eAAe,gBAAgBU,YAAcF,EAIxD,QAASG,QACP,MAAKC,WAAUC,cAKfD,UAAUC,cAAcvB,OAAO,GAAOJ,UAAWW,cACjDE,UAASe,KAAKC,UAAUC,IAAI,iBAL1BjB,SAASC,eAAe,gBAAgBiB,UAAY,kEASxD,QAASC,aACLC,MAAMJ,UAAUC,IAAI,UAhExBJ,UAAUC,aAAeD,UAAUQ,oBAAsBR,UAAUS,iBAAmBT,UAAUU,gBAAkBV,UAAUC,aAC5HzB,OAAOC,IAAMD,OAAOC,KAAOD,OAAOmC,SAElC,IAAIC,KAAMzB,SAASC,eAAe,OAC9BV,MAAQS,SAASC,eAAe,WAChCG,OAASJ,SAASC,eAAe,UACjCmB,MAAQpB,SAASC,eAAe,SAChCyB,QAAU1B,SAASC,eAAe,WAClC0B,QAAU3B,SAASC,eAAe,WAClC2B,IAAMxB,OAAOyB,WAAW,MACxBC,WAAa,IAyDjBH,SAAQI,iBAAkB,QAAS,SAAUC,GAC3CpB,SACC,GAEHc,QAAQK,iBAAkB,QAAS,SAAUC,GAC3Cb,YACAnB,SAASe,KAAKC,UAAUC,IAAI,kBAC3B","file":"app.js","sourcesContent":["navigator.getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.getUserMedia;\nwindow.URL = window.URL || window.webkitURL;\n\nvar app = document.getElementById('app');\nvar video = document.getElementById('monitor');\nvar canvas = document.getElementById('canvas');\nvar graph = document.getElementById('graph');\nvar capture = document.getElementById('capture');\nvar starter = document.getElementById('starter');\nvar ctx = canvas.getContext('2d');\nvar intervalId = null;\n\nfunction gotStream(stream) {\n  if (window.URL) {\n    video.src = window.URL.createObjectURL(stream);\n  } else {\n    video.src = stream; // Opera.\n  }\n\n  video.onerror = function(e) {\n    stream.stop();\n  };\n\n  stream.onended = noStream;\n\n  video.onloadedmetadata = function(e) { // Not firing in Chrome. See crbug.com/110938.\n    document.getElementById('splash').hidden = true;\n    document.getElementById('app').hidden = false;\n  };\n\n  // Since video.onloadedmetadata isn't firing for getUserMedia video, we have\n  // to fake it.\n  setTimeout(function() {\n    document.getElementById('splash').hidden = true;\n    document.getElementById('app').hidden = false;\n  }, 50);\n\n    video.onloadedmetadata = function(){ // Set canvas width and height to video width and height.\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n    };\n}\n\nfunction noStream(e) {\n  var msg = 'No camera available.';\n  if (e.code == 1) {\n    msg = 'User denied access to use camera.';\n  }\n  document.getElementById('errorMessage').textContent = msg;\n}\n\n\nfunction init() {\n  if (!navigator.getUserMedia) {\n    document.getElementById('errorMessage').innerHTML = 'Sorry. <code>navigator.getUserMedia()</code> is not available.';\n    return;\n  }\n\n  navigator.getUserMedia({video: true}, gotStream, noStream);\n  document.body.classList.add('running');\n}\n\n\nfunction loadGraph() {\n    graph.classList.add('loaded');\n}\n\nstarter.addEventListener( 'click', function( event ) {\n  init();\n}, false );\n\ncapture.addEventListener( 'click', function( event ) {\n  loadGraph();\n  document.body.classList.add('graph-loaded');\n}, false );\n"],"sourceRoot":"/source/"}