{"version":3,"sources":["app.js"],"names":["gotStream","stream","window","URL","video","src","createObjectURL","onerror","e","stop","onended","noStream","onloadedmetadata","document","getElementById","hidden","setTimeout","canvas","width","videoWidth","height","videoHeight","msg","code","textContent","capture","intervalId","clearInterval","setInterval","img","ctx","drawImage","createElement","toDataURL","angle","Math","floor","random","sign","style","transform","maxLeft","innerWidth","maxTop","innerHeight","top","left","gallery","appendChild","init","navigator","getUserMedia","body","classList","add","innerHTML","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","webkitURL","app","effect","captureButton","starter","getContext","addEventListener","event"],"mappings":"AAaA,QAASA,WAAUC,GACbC,OAAOC,IACTC,MAAMC,IAAMH,OAAOC,IAAIG,gBAAgBL,GAEvCG,MAAMC,IAAMJ,EAGdG,MAAMG,QAAU,SAASC,GACvBP,EAAOQ,QAGTR,EAAOS,QAAUC,SAEjBP,MAAMQ,iBAAmB,SAASJ,GAChCK,SAASC,eAAe,UAAUC,QAAS,EAC3CF,SAASC,eAAe,OAAOC,QAAS,GAK1CC,WAAW,WACTH,SAASC,eAAe,UAAUC,QAAS,EAC3CF,SAASC,eAAe,OAAOC,QAAS,GACvC,IAEDX,MAAMQ,iBAAmB,WACrBK,OAAOC,MAAQd,MAAMe,WACrBF,OAAOG,OAAShB,MAAMiB,aAI9B,QAASV,UAASH,GAChB,GAAIc,GAAM,sBACI,IAAVd,EAAEe,OACJD,EAAM,qCAERT,SAASC,eAAe,gBAAgBU,YAAcF,EAGxD,QAASG,WACP,MAAIC,aACFC,cAAcD,iBACdA,WAAa,YAIfA,WAAaE,YAAY,WACvB,GACIC,IADYC,IAAIC,UAAU3B,MAAO,EAAG,GAC9BS,SAASmB,cAAc,OACjCH,GAAIxB,IAAMY,OAAOgB,UAAU,aAE3B,IAAIC,GAAQC,KAAKC,MAAsB,GAAhBD,KAAKE,UACxBC,EAAOH,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAAI,EAC/CR,GAAIU,MAAMC,UAAY,WAAcF,EAAOJ,EAAS,MAEpD,IAAIO,GAAUvC,OAAOwC,WACjBC,EAASzC,OAAO0C,WAEpBf,GAAIU,MAAMM,IAAMV,KAAKC,MAAMD,KAAKE,SAAWM,GAAU,KACrDd,EAAIU,MAAMO,KAAOX,KAAKC,MAAMD,KAAKE,SAAWI,GAAW,KAEvDM,QAAQC,YAAYnB,IACnB,MAGL,QAASoB,QACP,MAAKC,WAAUC,cAKfD,UAAUC,cAAc/C,OAAO,GAAOJ,UAAWW,cACjDE,UAASuC,KAAKC,UAAUC,IAAI,iBAL1BzC,SAASC,eAAe,gBAAgByC,UAAY,kEAhFxDL,UAAUC,aAAeD,UAAUM,oBAAsBN,UAAUO,iBAAmBP,UAAUQ,gBAAkBR,UAAUC,aAC5HjD,OAAOC,IAAMD,OAAOC,KAAOD,OAAOyD,SAElC,IAAIC,KAAM/C,SAASC,eAAe,OAC9BV,MAAQS,SAASC,eAAe,WAChCG,OAASJ,SAASC,eAAe,UACjC+C,OAAShD,SAASC,eAAe,UACjCiC,QAAUlC,SAASC,eAAe,WAClCgD,cAAgBjD,SAASC,eAAe,WACxCiD,QAAUlD,SAASC,eAAe,WAClCgB,IAAMb,OAAO+C,WAAW,MACxBtC,WAAa,IA8EjBqC,SAAQE,iBAAkB,QAAS,SAAUC,GAC3CjB,SACC,GAEHa,cAAcG,iBAAkB,QAAS,SAAUC,GACjDzC,YACC","file":"app.js","sourcesContent":["navigator.getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.getUserMedia;\nwindow.URL = window.URL || window.webkitURL;\n\nvar app = document.getElementById('app');\nvar video = document.getElementById('monitor');\nvar canvas = document.getElementById('canvas');\nvar effect = document.getElementById('effect');\nvar gallery = document.getElementById('gallery');\nvar captureButton = document.getElementById('capture');\nvar starter = document.getElementById('starter');\nvar ctx = canvas.getContext('2d');\nvar intervalId = null;\n\nfunction gotStream(stream) {\n  if (window.URL) {\n    video.src = window.URL.createObjectURL(stream);\n  } else {\n    video.src = stream; // Opera.\n  }\n\n  video.onerror = function(e) {\n    stream.stop();\n  };\n\n  stream.onended = noStream;\n\n  video.onloadedmetadata = function(e) { // Not firing in Chrome. See crbug.com/110938.\n    document.getElementById('splash').hidden = true;\n    document.getElementById('app').hidden = false;\n  };\n\n  // Since video.onloadedmetadata isn't firing for getUserMedia video, we have\n  // to fake it.\n  setTimeout(function() {\n    document.getElementById('splash').hidden = true;\n    document.getElementById('app').hidden = false;\n  }, 50);\n\n    video.onloadedmetadata = function(){ // Set canvas width and height to video width and height.\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n    };\n}\n\nfunction noStream(e) {\n  var msg = 'No camera available.';\n  if (e.code == 1) {\n    msg = 'User denied access to use camera.';\n  }\n  document.getElementById('errorMessage').textContent = msg;\n}\n\nfunction capture() {\n  if (intervalId) {\n    clearInterval(intervalId);\n    intervalId = null;\n    return;\n  }\n\n  intervalId = setInterval(function() {\n    var snapImage = ctx.drawImage(video, 0, 0);\n    var img = document.createElement('img');\n    img.src = canvas.toDataURL('image/webp');\n\n    var angle = Math.floor(Math.random() * 36);\n    var sign = Math.floor(Math.random() * 2) ? 1 : -1;\n    img.style.transform = 'rotateZ(' + (sign * angle) + 'deg)';\n\n    var maxLeft = window.innerWidth;\n    var maxTop = window.innerHeight;\n\n    img.style.top = Math.floor(Math.random() * maxTop) + 'px';\n    img.style.left = Math.floor(Math.random() * maxLeft) + 'px';\n\n    gallery.appendChild(img);\n  }, 150);\n}\n\nfunction init() {\n  if (!navigator.getUserMedia) {\n    document.getElementById('errorMessage').innerHTML = 'Sorry. <code>navigator.getUserMedia()</code> is not available.';\n    return;\n  }\n\n  navigator.getUserMedia({video: true}, gotStream, noStream);\n  document.body.classList.add('running');\n}\n\n\nstarter.addEventListener( 'click', function( event ) {\n  init();\n}, false );\n\ncaptureButton.addEventListener( 'click', function( event ) {\n  capture();\n}, false );\n"],"sourceRoot":"/source/"}